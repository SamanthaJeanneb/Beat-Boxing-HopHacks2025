// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

// This was generated using spacetimedb cli version 1.3.2 (commit ).

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  Identity,
  ProductType,
  ProductTypeElement,
  SubscriptionBuilderImpl,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
  type CallReducerFlags,
  type DbContext,
  type ErrorContextInterface,
  type Event,
  type EventContextInterface,
  type ReducerEventContextInterface,
  type SubscriptionEventContextInterface,
} from "@clockworklabs/spacetimedb-sdk";
import { User } from "./user_type";
import { type EventContext } from ".";

export class UserTableHandle {
  tableCache: TableCache<User>;

  constructor(tableCache: TableCache<User>) {
    this.tableCache = tableCache;
  }

  count(): number {
    return this.tableCache.count();
  }

  iter(): Iterable<User> {
    return this.tableCache.iter();
  }
  
  identity = {
    find: (col_val: Identity): User | undefined => {
      for (let row of this.tableCache.iter()) {
        if (deepEqual(row.identity, col_val)) {
          return row;
        }
      }
    },
  };

  onInsert = (cb: (ctx: EventContext, row: User) => void) => {
    return this.tableCache.onInsert(cb);
  }
  removeOnInsert = (cb: (ctx: EventContext, row: User) => void) => {
    return this.tableCache.removeOnInsert(cb);
  }
  onDelete = (cb: (ctx: EventContext, row: User) => void) => {
    return this.tableCache.onDelete(cb);
  }
  removeOnDelete = (cb: (ctx: EventContext, row: User) => void) => {
    return this.tableCache.removeOnDelete(cb);
  }
  onUpdate = (cb: (ctx: EventContext, oldRow: User, newRow: User) => void) => {
    return this.tableCache.onUpdate(cb);
  }
  removeOnUpdate = (cb: (ctx: EventContext, onRow: User, newRow: User) => void) => {
    return this.tableCache.removeOnUpdate(cb);
  }
}
